pool:
  name: 'Lantek Linux'

trigger:
  branches:
    include:
    - main

variables:
- group: sonarqube

- name: conda_environment_name
  value: 'code_development_env'
- name: sonar_project_key
  value: 'SONAR_KEY'
- name: sonar_reports_path
  value: 'coverage.xml'
- name: sonar_xunit_reports_path
  value: 'unit-testresults.xml'
- name: sonar_general_exclusions
  value: '**/__init__.py'

resources:
  repositories:
    - repository: Merlin.PROJECT_NAME
      type: git
      name: 'Merlin/Merlin.PROJECT_NAME'
    - repository: BuildTools
      type: git
      name: 'Lantek 360/Lantek360.BuildTools'

stages:
  - stage: Build
    displayName: 'Build'
    jobs:
      - job: Build
        displayName: 'Build'
        steps:
          - task: PipAuthenticate@1
            displayName: 'Pip Authenticate'
            inputs:
              onlyAddExtraIndex: true
              artifactFeeds: lantek360

          - task: Bash@3
            displayName: 'Restore Environment'
            inputs:
              targetType: 'inline'
              script: |
                set -e
                python -V

                ENVS=$(conda env list | awk '{print $conda_environment_name}' )
                if [[ $ENVS = *"$conda_environment_name"* ]]; then
                   echo "Environment found, updating it..."
                   conda env update --name $(conda_environment_name) --file Settings/Code/$(conda_environment_name).yaml --prune
                else
                   echo "No environment found, creating it..."
                   # Create the current environment based on environment file
                   conda env create --name $(conda_environment_name) --file Settings/Code/$(conda_environment_name).yaml
                fi;

                # Add conda to PATH
                echo "##vso[task.prependpath]/opt/conda/bin"

                # Add PATH to environment
                source activate $(conda_environment_name)
                echo "##vso[task.prependpath]/opt/conda/envs/$(conda_environment_name)/bin"

                conda env list

          - template: build-templates/sonarqube/sonar-prepare-python.yaml@BuildTools
            parameters:
              sonarServiceConnection: $(sonar_service_connection_name)
              projectKey: $(sonar_project_key)

          - template: Pipelines/DevopsPipelines/code-quality-template.yaml@Merlin.SmartQuoting
            parameters:
              workingDirectory: 'Code'
              testsWorkingDirectory: ''
              ignoreTestsWorkingDirectory: 'Tests/Integration'

          - template: build-templates/sonarqube/sonar-analyze.yaml@BuildTools