name: Build
on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    environment: code_develop_env
    env:
      conda_environment_name: 'code_development_env'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/checkout@v3
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          ENVS=$(conda env list | awk '{print ${{ env.conda_environment_name }}}' )
          if [[ $ENVS = *"$conda_environment_name"* ]]; then
            echo "Environment found, updating it..."
            conda env update --name ${{ env.conda_environment_name }} --file Settings/Code/${{ env.conda_environment_name }}.yaml --prune
          else
            echo "No environment found, creating it..."
            # Create the current environment based on environment file
            conda env create --name ${{ env.conda_environment_name }} --file Settings/Code/${{ env.conda_environment_name }}.yaml
          fi;
      
          source activate ${{ env.conda_environment_name }}
      
          # Add PATH to environment
          echo $CONDA/envs/${{ env.conda_environment_name }}/bin >> $GITHUB_PATH
      
          conda env list
      - name: Run tox
        run: tox -e py
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
            args: > 
              -Dsonar.organization=lgcorzo
              -Dsonar.projectKey=lgcorzo_MLOPS_Repo_structure_template
              -Dsonar.python.version=3
              -Dsonar.sources=Code
              -Dsonar.dynamicAnalysis=reuseReports
              -Dsonar.core.codeCoveragePlugin=cobertura
              -Dsonar.python.coverage.reportPaths=*coverage*.xml
              -Dsonar.python.xunit.reportPath=xunit-result*.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
            name: coverage-report
            path: htmlcov